[
  {
    "description": "",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The content of the component."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override or extend the styles applied to the component."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "@ignore"
      },
      "color": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "enum",
              "value": [
                {
                  "value": "'inherit'",
                  "computed": false
                },
                {
                  "value": "'primary'",
                  "computed": false
                },
                {
                  "value": "'secondary'",
                  "computed": false
                },
                {
                  "value": "'success'",
                  "computed": false
                },
                {
                  "value": "'error'",
                  "computed": false
                },
                {
                  "value": "'info'",
                  "computed": false
                },
                {
                  "value": "'warning'",
                  "computed": false
                }
              ]
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n@default 'primary'"
      },
      "component": {
        "type": {
          "name": "elementType"
        },
        "required": false,
        "description": "The component used for the root node.\nEither a string to use a HTML element or a component."
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If `true`, the component is disabled.\n@default false"
      },
      "disableElevation": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If `true`, no elevation is used.\n@default false"
      },
      "disableFocusRipple": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If `true`, the  keyboard focus ripple is disabled.\n@default false"
      },
      "disableRipple": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n@default false"
      },
      "endIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Element placed after the children."
      },
      "focusVisibleClassName": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "@ignore"
      },
      "fullWidth": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If `true`, the button will take up the full width of its container.\n@default false"
      },
      "href": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The URL to link to when the button is clicked.\nIf defined, an `a` element will be used as the root node."
      },
      "size": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "enum",
              "value": [
                {
                  "value": "'small'",
                  "computed": false
                },
                {
                  "value": "'medium'",
                  "computed": false
                },
                {
                  "value": "'large'",
                  "computed": false
                }
              ]
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The size of the component.\n`small` is equivalent to the dense button styling.\n@default 'medium'"
      },
      "startIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Element placed before the children."
      },
      "sx": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "union",
                "value": [
                  {
                    "name": "func"
                  },
                  {
                    "name": "object"
                  },
                  {
                    "name": "bool"
                  }
                ]
              }
            },
            {
              "name": "func"
            },
            {
              "name": "object"
            }
          ]
        },
        "required": false,
        "description": "The system prop that allows defining system overrides as well as additional CSS styles."
      },
      "type": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "enum",
              "value": [
                {
                  "value": "'button'",
                  "computed": false
                },
                {
                  "value": "'reset'",
                  "computed": false
                },
                {
                  "value": "'submit'",
                  "computed": false
                }
              ]
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "@ignore"
      },
      "variant": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "enum",
              "value": [
                {
                  "value": "'contained'",
                  "computed": false
                },
                {
                  "value": "'outlined'",
                  "computed": false
                },
                {
                  "value": "'text'",
                  "computed": false
                }
              ]
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The variant to use.\n@default 'text'"
      }
    },
    "filename": "ers/jackbehar/Documents/GitHub/MUI-Merge/componentsSrc/Button.js"
  }
]